/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define AS(keycode) &as LS(keycode) keycode

#define DEFAULT 0
#define COLEMAK 1
#define NUMSYM  2
//#define NAV     3
//#define MEDIA   4
//#define MOUSE   5


/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  '  |
// |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  |
//             | ESC | BSP | RET |     | TAB | SPC |  ;  |
            bindings = <
    &kp Q          &kp W          &kp E          &kp R          &kp T             &kp Y          &kp U          &kp I          &kp O          &kp P
    &mt LCTRL A    &mt LALT S     &mt LGUI D     &mt LSHIFT F   &kp G             &kp H          &mt RSHIFT J   &mt RGUI K     &mt RALT L     &mt RCTRL SQT
    &kp Z          &kp X          &kp C          &kp V          &kp B             &kp N          &kp M          &kp COMMA      &kp DOT        &kp FSLH
                                  &kp ESC       &lt NUMSYM BSPC &kp KP_N1           &kp TAB        &kp SPACE      &kp SEMI
//                                  &kp ESC     &lt NUMSYM BSPC   &lt MOUSE RET     &lt MEDIA TAB  &lt NAV SPACE  &kp SEMI
            >;
        };

        colemak_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B  |     |  J  |  L  |  U  |  Y  |  '  |
// |  A  |  R  |  S  |  T  |  G  |     |  M  |  N  |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V  |     |  K  |  H  |  ,  |  .  |  /  |
//             | ESC | BSP | RET |     | TAB | SPC |  ;  |
            bindings = <
    &kp Q          &kp W          &kp F          &kp P          &kp B             &kp J          &kp L          &kp U          &kp Y          &kp SQT
    &mt LCTRL A    &mt LALT R     &mt LGUI S     &mt LSHIFT T   &kp G             &kp M          &mt RSHIFT N   &mt RGUI E     &mt RALT I     &mt RCTRL O
    &kp Z          &kp X          &kp C          &kp D          &kp V             &kp K          &kp H          &kp COMMA      &kp DOT        &kp FSLH
                                  &kp ESC       &kp BSPC          &kp RET           &kp TAB        &kp SPACE      &kp SEMI
//                                  &kp ESC     &lt NUMSYM BSPC   &lt MOUSE RET     &lt MEDIA TAB  &lt NAV SPACE  &kp SEMI
            >;
        };

        numsym_layer {
// -----------------------------------------------------------------------------------------
// |  *  |  7  |  8  |  9  |  +  |     |  #  |  &  |  _  |  %  |  $  |
// |  .  |  4  |  5  |  6  |  0  |     |  =  |  (  |  )  |  [  |  ]  |
// |  /  |  1  |  2  |  3  |  -  |     |  !  |  {  |  }  |  @  |  ^  |
//             |     |     |     |     |  \  | SPC |  `  |
            bindings = <
    &kp STAR       &kp KP_N7      &kp KP_N8      &kp KP_N9      &kp KP_PLUS       &kp HASH       &kp AMPS       &kp UNDER      &kp PRCNT      &kp DLLR
    &kp KP_DOT     &kp KP_N4      &kp KP_N5      &kp KP_N6      &kp KP_N0         &kp EQUAL    &mt RSHIFT LPAR  &mt RGUI RPAR  &mt RALT LBKT  &mt RCTRL RBKT
    &kp KP_DIVIDE  &kp KP_N1      &kp KP_N2      &kp KP_N3      &kp KP_MINUS      &kp EXCL       &kp LBRC       &kp RBRC       &kp AT         &kp CARET
                                  &none          &trans         &none             AS(BSLH)       &kp SPACE      AS(GRAVE)
            >;
        };
    };
};
